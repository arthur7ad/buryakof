<?php

namespace app\modules\page\models;

use Yii;
use yii\bootstrap\Html;
use yii\helpers\ArrayHelper;

class Page extends \app\models\Page {

    const LAYOUT = [
        'default' => 'По умолчанию',
        'home' => 'Главная',
        'about' => 'О компании',
        'gruzoperevozki' => 'Грузоперевозки',
        'avtopark' => 'Автопарк',
        'kontakty' => 'Контакты',
        'article' => 'Статьи',
        'ur_lica' => 'Юридические лица',
        'tarif' => 'Тарифы',
        'gruzchiki' => 'Грузчики',
        'pereezdy' => 'Переезды',
        'pereezd' => 'Переезды домашние',
        'takelazh' => 'Такелаж',
        'cases' => 'Наши кейсы',
    ];

    public $tree = [], $breadcrumbs = [];
    public $city_content;

    public function get_Content() {

        if (($model = PageCityContent::findOne(['page_id' => $this->id, 'city_id' => Yii::$app->city->id])) && $model->content):

            $model->content = $model->replaceShortCodes($model->content, 'content');
            return $model->content;

        else:
            return $this->content;
        endif;

//        return $this->content;
//        return 123;
    }

    public function get_Title() {

        if (($model = PageCityContent::findOne(['page_id' => $this->id, 'city_id' => Yii::$app->city->id])) && $model->title):

            $model->title = $model->replaceShortCodes($model->title, 'title');
            return $model->title;

        else:
            return $this->url->title;
        endif;

//        return $this->content;
//        return 123;
    }

    public function get_Description() {

        if (($model = PageCityContent::findOne(['page_id' => $this->id, 'city_id' => Yii::$app->city->id])) && $model->description):

            $model->description = $model->replaceShortCodes($model->description, 'description');
            return $model->description;

        else:
            return $this->url->description;
        endif;

//        return $this->content;
//        return 123;
    }

    public function get_Header() {

        if (($model = PageCityContent::findOne(['page_id' => $this->id, 'city_id' => Yii::$app->city->id])) && $model->header):

            $model->header = $model->replaceShortCodes($model->header, 'header');
            return $model->header;

        else:
            return $this->header;
        endif;

//        return $this->content;
//        return 123;
    }

    public function get_Content_Seo_1() {

        if (($model = PageCityContent::findOne(['page_id' => $this->id, 'city_id' => Yii::$app->city->id])) && $model->content_seo_1):

            $model->content_seo_1 = $model->replaceShortCodes($model->content_seo_1, 'content_seo_1');
            return $model->content_seo_1;

        else:
            return $this->content_seo_1;
        endif;

//        return $this->content;
//        return 123;
    }

    public function get_Content_Seo_2() {

        if (($model = PageCityContent::findOne(['page_id' => $this->id, 'city_id' => Yii::$app->city->id])) && $model->content_seo_2):

            $model->content_seo_2 = $model->replaceShortCodes($model->content_seo_2, 'content_seo_2');
            return $model->content_seo_2;

        else:
            return $this->content_seo_2;
        endif;

//        return $this->content;
//        return 123;
    }

    public function collectCityContent() {

        foreach (\app\modules\city\models\City::getActiveCity() as $k => $city):

            if ($model = PageCityContent::findOne(['city_id' => $k, 'page_id' => $this->id]))
                ;

            else {
                $model = new PageCityContent();
                $model->page_id = $this->id;
                $model->city_id = $k;
            }

            $this->city_content[$k] = $model;

        endforeach;
    }

    public static function getHome() {

        return self::findOne(1);
    }

    public static function __getUrls() {
        return ArrayHelper::map(self::find()->all(), 'id', 'url.url');
    }

    public function afterFind() {

//        $this->content = html_entity_decode($this->content);
        $this->cases = explode(',', $this->cases);
        return parent::afterFind();
    }

    public function afterDelete() {

        \app\models\Url::deleteAll(['id' => $this->url_id]);
        return parent::afterDelete();
    }

    public function beforeSave($insert)
    {
        $this->cases = $this->cases ? implode(',', $this->cases) : '';
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function getTree() {


        $result = [];

        $model = self::findAll(['parent_id' => 0]);

        foreach ($model as $item):

            if (self::findAll(['parent_id' => 0])) {
                $result[] = ["label" => '<span>' . $item->header . '</span>',
                    "url" => '#', 'items' => $item->getChilds($item->id)];
            } else
                $result[] = ["label" => $item->header, "url" => '/page/admin/update/' . $item->id];

        endforeach;


        return $result;
    }

    public static function getMenu() {


        $result = '';

        $model = self::findAll(['parent_id' => 0]);

        Yii::error(\yii\helpers\ArrayHelper::getColumn(self::findAll(['parent_id' => 0]), 'header'));

        foreach ($model as $item):

            if (self::findAll(['parent_id' => $item->id])) {

                Yii::error(\yii\helpers\ArrayHelper::getColumn(self::findAll(['parent_id' => $item->id]), 'header'));

                $result .= '<li class="treeview">
                                    <a href="/page/admin/update/' . $item->id . '"><i class="fa fa-circle-o"></i> ' . $item->header . '
                                        <span class="pull-right-container">
                                            <i class="fa fa-angle-left pull-right"></i>
                                        </span>
                                    </a>'
                        . '<ul class="treeview-menu">'
                        . $item->createSubMenu($item->id)
                        . '</ul>'
                        . '</li>';
//                $result[] = ["label" => '<span>' . $item->header . '</span>',
//                    "url" => '#', 'items' => $item->getChilds($item->id)];
            } else
                $result .= '<li><a href="/page/admin/update/' . $item->id . '"><i class="fa fa-circle-o"></i>' . $item->header . '</a></li>';

        endforeach;

        $result = '<li class="treeview">
                        <a href="#">
                                <i class="fa fa-tree"></i> <span>Дерево страниц</span>
                                <span class="pull-right-container">
                                    <i class="fa fa-angle-left pull-right"></i>
                                </span>'
                . '</a > ' .
                '<ul class="treeview-menu">'
                . $result . ''
                . '</ul>'
                . '</li>';

        return $result;
    }

    public function createSubMenu($id) {

        $result = '';

        $model = self::findAll(['parent_id' => $id]);

        foreach ($model as $item):

            if (self::findAll(['parent_id' => $item->id])) {
                $result .= '<li class="treeview">
                                            <a href="/page/admin/update/' . $item->id . '"><i class="fa fa-circle-o"></i>' . $item->header . '
                                                <span class="pull-right-container">
                                                    <i class="fa fa-angle-left pull-right"></i>
                                                </span>
                                            </a>' .
                        '<ul class="treeview-menu">' .
                        $this->createSubMenu($item->id) . ''
                        . '</ul>'
                        . '</li>';
            } else
                $result .= '<li><a href="/page/admin/update/' . $item->id . '"><i class="fa fa-circle-o"></i> ' . $item->header . '</a></li>';


        endforeach;

        return $result;
    }

    public function getChilds($id) {

        $result = [];

        $model = self::findAll(['parent_id' => $id]);

        foreach ($model as $item):

            if (self::findAll(['parent_id' => $id])) {
                $result[] = [
                    "label" => '<span>' . $item->header . '</span>'
                    , "url" => '#', 'items' => $this->getChilds($item->id)];
            } else
                $result[] = ["label" => $item->header, "url" => '/page/admin/update/' . $item->id];

        endforeach;

        return $result;
    }

    public function getParent() {
        return $this->hasOne(self::className(), ['id' => 'parent_id']);
    }

    public function getBreadCrumbs() {

        $result = [];

        $this->collectParents($this->parent_id);

        if ($this->breadcrumbs)
            foreach (array_reverse($this->breadcrumbs) as $id):

                $result[] = ['label' => (self::findOne($id)->name ? self::findOne($id)->name : self::findOne($id)->header), 'url' => self::findOne($id)->url->url];

            endforeach;

        $result[] = ['label' => $this->name ? $this->name : $this->header];
//        Yii::error($result);
//        Yii::error($this->breadcrumbs);
//        exit();

        return $result;
    }

    public function collectParents($id) {

//        Yii::error($id);

        if ($model = self::findOne($id)):

            $this->breadcrumbs[] = $model->id;
            $this->collectParents($model->parent_id);

        endif;

        return false;
    }

    public static function __getLandingList() {

        return ArrayHelper::map(self::__getAll(), 'subdomain', 'subdomain');
    }

    public function getCases()
    {
        $model = PageCityContent::findOne(['page_id' => $this->id, 'city_id' => Yii::$app->city->id]);
        return $model->cases;
    }

}
